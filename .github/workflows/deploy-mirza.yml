# name: Deploy Mirza

# on:
#   workflow_run:
#     workflows: ['Nx CI Pipeline']
#     branches: [master]
#     types:
#       - completed

# env:
#   IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/mirza

# jobs:
#   check-ci-result:
#     runs-on: ubuntu-latest
#     outputs:
#       should_deploy: ${{ steps.check-result.outputs.should_deploy }}
#     steps:
#       - name: Check CI result
#         id: check-result
#         run: |
#           if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
#             echo "should_deploy=true" >> $GITHUB_OUTPUT
#           else
#             echo "should_deploy=false" >> $GITHUB_OUTPUT
#           fi

#   check-affected:
#     needs: check-ci-result
#     if: needs.check-ci-result.outputs.should_deploy == 'true'
#     runs-on: ubuntu-latest
#     outputs:
#       is_affected: ${{ steps.check-affected.outputs.is_affected }}
#     steps:
#       - uses: actions/checkout@v4

#       - name: Try to download artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: dist
#           path: dist/

#       - name: Check if mirza-write was affected
#         id: check-affected
#         run: |
#           if [ -d "dist/apps/mirza-write" ]; then
#             echo "is_affected=true" >> $GITHUB_OUTPUT
#           else
#             echo "is_affected=false" >> $GITHUB_OUTPUT
#           fi

#   build:
#     needs: check-affected
#     if: needs.check-affected.outputs.is_affected == 'true'
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Define Docker TAG
#         id: vars
#         run: |
#           BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]/-/g')
#           SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
#           echo "TAG=${BRANCH_NAME}-${SHORT_SHA}" >> $GITHUB_OUTPUT
#           echo "Docker tag will be: ${BRANCH_NAME}-${SHORT_SHA}"

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker image
#         run: |
#           docker build -f Dockerfile.mirza -t $IMAGE_NAME:${{ steps.vars.outputs.TAG }} .
#           docker tag $IMAGE_NAME:${{ steps.vars.outputs.TAG }} $IMAGE_NAME:${GITHUB_REF##*/}

#       - name: Push Docker images
#         run: |
#           docker push $IMAGE_NAME:${{ steps.vars.outputs.TAG }}
#           docker push $IMAGE_NAME:${GITHUB_REF##*/}

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up kubeconfig
#         run: |
#           mkdir -p ~/.kube
#           echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
#           chmod 600 ~/.kube/config

#       - name: Deploy to K3s
#         run: |
#           BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_.-]/-/g')
#           SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
#           TAG=${BRANCH_NAME}-${SHORT_SHA}
#           kubectl set image deployment/angular-app angular-app=${{ secrets.DOCKER_USERNAME }}/mirza:$TAG
#           kubectl rollout status deployment/angular-app
